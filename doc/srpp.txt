SRPP - Simple Restful PDMP Profile
==================================

Background
----------

Two United States federal government agencies (SAMHSA (the Substance
Abuse and Mental Health Services Administration) and ONC (the Office
of the National Coordinator for Health IT)) implemented a set of pilot
tests in 2012.  These pilots were intended to demonstrate the value of
providing PDMP (Prescription Drug Monitoring Program) data to health
care providers via the systems that they used on a day-to-day basis
such as EMR's and HIE's.  The results were clear: healthcare providers
used PDMP data more effectively when they didn't have to "alt-tab" to
a web browser and login to a PDMP portal.

One of the key lessons learned from the pilot tests was that
integrating to PDMP systems was very difficult.  In most states, the
PDMP was a "walled garden" with no API for system integration, only an
HTML portal for end-user access.  We were able in some cases to work
around this problem by connecting to an interstate PDMP data sharing
system (such as PMPi) but had to abandon some pilot tests because we
couldn't integrate with the local PDMP.

Based on this experience, ONC and SMAHSA developed a testbed to
demonstrate an integration between a PDMP and an EMR.  This document
describes the protocol used for that demonstration.  It's based on
existing healthcare and internet standard protocols.

Introduction
------------

The Simple Restful PDMP Profile describes an interface for health IT
systems (e.g., EMR, EHR, HIE) to query PDMP systems for patient
controlled substance history reports.  It implements two use cases:
patient query (i.e., search), and report retrieval.  Patient query is
implemented using the [OpenSearch
Protocol](http://www.opensearch.org/), and report retrieval is
implemented using the [hData REST Binding for
RLUS](http://www.projecthdata.org/).  Both protocols are very
flexible, so this document describes the design constraints that
should be followed to ensure interoperability.

Patient Query
-------------

SRPP patient queries use the [OpenSearch
Protocol](http://www.opensearch.org/). The OpenSearch web site
describes OpenSearch as

> a collection of simple formats for the sharing of search results.

OpenSearch consists of a "description document" that describes how to
query a search service, and a set of "response elements" that describe
how to format search results.

SRPP server implementations must provide an [Autodiscovery
link](http://www.opensearch.org/Specifications/OpenSearch/1.1#Autodiscovery)
to their OpenSearch description document, in either HTML or RSS form.
HTML is preferred, in the server's home page (i.e., the page with a
path of "/").  Clients should implement autodiscovery, but should also
allow the server's description document URI to be entered manually.

SRPP searches should be case-insensitive.

SRPP search servers should prefer to match search terms precisely and
should return only precise matches if there are any.  If there are no
precise matches then they can choose to return results based on
"fuzzy" searches.  For example, if an SRPP server contained patients
whose names were "John Smith" and "Johnson Ironsmith" and a client
searched for "family=smith&given=john" the server should return only
"John Smith".  If a server contained patients whose names were
"Johnathan Smithfield" and "Johnson Ironsmith" but no patient whose
name was "John Smith" and a client searched for
"family=smith&given=john" the server could choose to return both
patients, or none at all.

### Description Document

The OpenSearch description document describes how a client should
query an OpenSearch server.  The format is [documented on the
OpenSearch
website](http://www.opensearch.org/Specifications/OpenSearch/1.1#OpenSearch_description_document)
but is extended by SRPP to accomodate specific search terms.

An example SRPP-compliant OpenSearch description document is provided
below in the "Examples" section.

### Search Terms

SRPP extends OpenSearch to allow for precisely targetted searches.
SRPP search URL's support the following search terms:

#### multi

The "multi" search term allows for broad unfocussed searches.  Search
keywords associated with "multi" will match given name, family name,
and all address fields.

Example:

    multi=main

would match a person whose name or address contained "main".

#### family

The "family" search term matches family (i.e., last) names.

Example:

    family=smith

would match a person whose family name was "Smith".

#### given

The "given" search term matches given (i.e., first) names.

Example:

    given=Fred

would match a person whose given name was "Fred".

#### dob

The "dob" search term matches a person's date of birth.  The search
data should be formatted in XML Schema date format, and should contain
only a date part and no timezone.

Example:

    dob=1939-02-29

would match a person born on Febrary 29, 1929.

#### loc

The "loc" search term matches any field in the person's address
record.

Example:

    loc=Sector 7G

would match a person whose address contained "Sector 7G".

#### gender

The "gender" search term matches the person's gender.  Allowable
values are "male" and "female".

Example:

    gender=male

would match all persons whose gender was known to be male.  It would
not match people whose gender was unknown.

### Atom Results

Document Retrieval
------------------

Security
--------

Examples
--------

### Example Description Document

    <?xml version="1.0" encoding="UTF-8"?>
    <OpenSearchDescription xmlns="http://a9.com/-/spec/opensearch/1.1/" xmlns:pdmp="http://pdmp.mitre.org/opensearchextensions/1.0/">
      <ShortName>PDMP Patient Search</ShortName>
      <LongName>PDMP Patient Search</LongName>
      <Description>Search the PDMP for patients</Description>
      <Tags>pdmp patient</Tags>
      <Url type="application/opensearchdescription+xml" method="get" rel="self" template="http://pdmp.example.org/people/opensearch"/>
      <Url type="application/atom+xml"
        template="http://pdmp.example.org/search?multi={searchTerms?}&amp;family={pdmp:familyname?}&amp;given={pdmp:givenname?}&amp;dob={pdmp:birthdate?}&amp;loc={pdmp:location?}&amp;gender={pdmp:gender?}"
        rel="results"
	indexOffset="1"
        pageOffset="1"/>
      <Query role="example"
	  pdmp:ln="smith"
	  pdmp:fn="john"
	  pdmp:location="boston"
          pdmp:gen="male"
	  title="Sample search"/>
      <Developer>MITRE Corporation</Developer>
      <SyndicationRight>limited</SyndicationRight>
      <AdultContent>false</AdultContent>
      <Language>*</Language>
      <OutputEncoding>UTF-8</OutputEncoding>
      <InputEncoding>UTF-8</InputEncoding>
    </OpenSearchDescription>

References
----------

Atom Syndication Format (RFC 4287): [http://tools.ietf.org/html/rfc4287](http://tools.ietf.org/html/rfc4287)<br/>
OpenSearch 1.1: [http://www.opensearch.org/Specifications/OpenSearch/1.1](http://www.opensearch.org/Specifications/OpenSearch/1.1)</br>
XML Schema Date datatype: [http://www.w3.org/TR/xmlschema-2/#date](http://www.w3.org/TR/xmlschema-2/#date)
